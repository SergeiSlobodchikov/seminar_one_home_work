import random 
# Домашнее задание Семинар 2
# Задача 10 
# На столе лежат n монеток. Некоторые из них лежат вверх решкой, а некоторые – гербом. 
# Определите минимальное число монеток, которые нужно перевернуть, чтобы все монетки были повернуты вверх одной и той же стороной. 
# Выведите минимальное количество монет, которые нужно перевернуть.
# 5 -> 1 0 1 1 0
# 2
def TenTask(): 
    money = ['орел', 'решка']
    table = random.choices(money, k=int(input('Введите, сколько монет лежит на столе ')))
    print(f'На столе так лежат монеты {table}')
    orel = 0
    reshka = 0
    for monetka in table:
        if monetka == money[0]:
            orel += 1 
        else:
            reshka += 1  
    if orel == 0 or reshka == 0:
        if orel == 0:
            storona = money[1]
        else:
            storona = money[0]
        print(f'Не нужно переворачивать так как все лежат стороной {storona}')
    elif orel == reshka:
        print(f'Нужно перевернуть какие хотите их по {reshka} шт.')
    elif orel > reshka:
        print(f'Нужно перевернуть стороной решки так как их меньше {reshka} шт.')
    else: 
        print(f'Нужно перевернуть стороной орла так как их меньше {orel} шт.')

TenTask()



# Задача 12 
# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике. Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать.
# Для этого Петя делает две подсказки. Он называет сумму этих чисел S и их произведение P. 
# Помогите Кате отгадать задуманные Петей числа.
def TwelveTask():
    print('Введите через пробел два натуральных числа сумму и произведение (двух чисел(X,Y≤1000))')
    s, p = [int(x) for x in input().split()]
    for x in range(1,s//2+1): 
        y = s-x
        if p == x*y:
            if x > 1000 or y > 1000:
                print(f'Два числа которые загадал Петя {x} и {y}, но при этом они больше 1000, Петя нас обманул')
                break
            else:
                print(f'Два числа которые загадал Петя {x} и {y} ')
                break
        elif x == s//2: 
            print(f'Петя что напутал такой пары нет')
        
# TwelveTask()


# Задача 14
# Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числа N.

def FourteenTask(num):
    number = 1
    i = 1
    while num >= number: 
        print(f'{number}', end=' ')
        number = 2**i
        i+=1

# FourteenTask(int(input(f'Введите число до которого будут показаны целые степени двойки \n')))